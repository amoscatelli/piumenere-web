{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/icons/icons.module.ts","./src/app/locale/locale.service.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/providers/providers.ts","./src/app/shared/shared.module.ts","./src/app/state/state-service.ts","./src/app/update/update-service.ts","./src/environments/abstract-environment.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule, Route } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\n\nexport const loginRoute: Route = {\n  path: 'login',\n  component: LoginComponent\n}\n\nexport const defaultRoute: Route = {\n  path: 'default',\n  loadChildren: () => import('./default/default.module').then(m => m.DefaultModule)\n}\n\nconst routes: Routes = [\n  loginRoute,\n  defaultRoute\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, ViewChild } from '@angular/core';\nimport { UpdateService } from './update/update-service';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { StateService } from './state/state-service';\nimport { filter } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { loginRoute, defaultRoute } from './app-routing.module';\nimport { LocaleService } from './locale/locale.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'piumenere-web';\n\n  @ViewChild(MatSidenav)\n  private sidenav: MatSidenav;\n\n  constructor(\n    router: Router,\n    public updateService: UpdateService,\n    stateService: StateService,\n    public localService: LocaleService\n  ) {\n    stateService.logged.pipe(\n      filter(logged => !logged)\n    ).subscribe(\n      () => router.navigate([loginRoute.path])\n    )\n    stateService.logged.pipe(\n      filter(logged => logged)\n    ).subscribe(\n      () => router.navigate([defaultRoute.path])\n    )\n  }\n\n  public toggle(): void {\n    this.sidenav.toggle();\n  }\n\n}\n","<mat-sidenav-container fullscreen>\n    <mat-sidenav>\n        <button mat-button (click)=\"this.toggle()\">\n            <mat-icon>close</mat-icon>\n        </button>\n    </mat-sidenav>\n    <mat-sidenav-content fxLayout=\"column\">\n        <mat-toolbar>\n            <div fxFlex>\n                <button mat-button (click)=\"this.toggle()\">\n                    <mat-icon>menu</mat-icon>\n                </button>\n            </div>\n            <mat-label fxFlexAlign=\"center\" i18n>app.label</mat-label>\n            <div fxFlex>\n            </div>\n        </mat-toolbar>\n        <div fxFlex>\n            <router-outlet></router-outlet>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","import { NgModule } from '@angular/core';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environmentType } from '../environments/environment';\nimport { SharedModule } from './shared/shared.module';\nimport { LoginComponent } from './login/login.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { EnvironmentType } from 'src/environments/abstract-environment';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { TranslateModuleLoaderConfig } from './providers/providers';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent\n  ],\n  imports: [\n    SharedModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    TranslateModule.forRoot(TranslateModuleLoaderConfig),\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environmentType === EnvironmentType.prod })\n  ],\n  bootstrap: [\n    AppComponent\n  ]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\r\nimport { MatIconRegistry } from '@angular/material/icon';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@NgModule()\r\nexport class IconsModule {\r\n\r\n    constructor(\r\n        private iconRegistry: MatIconRegistry,\r\n        private sanitizer: DomSanitizer) {\r\n        this.iconRegistry.addSvgIconSet(this.sanitizer.bypassSecurityTrustResourceUrl('./assets/mdi.svg'));\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { registerLocaleData } from '@angular/common';\r\nimport localeIt from '@angular/common/locales/it';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class LocaleService {\r\n\r\n    constructor(\r\n        public translate: TranslateService\r\n    ) {\r\n        if (!localStorage.getItem('locale')) {\r\n            if (!this.translate.getBrowserLang()) {\r\n              localStorage.setItem('locale', 'en');\r\n            } else {\r\n              localStorage.setItem('locale', this.translate.getBrowserLang());\r\n            }\r\n          }\r\n          registerLocaleData(localeIt, 'it');\r\n      \r\n          const localeId = localStorage.getItem('locale');\r\n          this.translate.setDefaultLang(localeId);\r\n          this.translate.use(localeId);\r\n    }\r\n\r\n}\r\n","import { Component } from '@angular/core';\nimport { AuthService, GoogleLoginProvider, FacebookLoginProvider } from 'angularx-social-login';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent {\n\n  public facebookId = FacebookLoginProvider.PROVIDER_ID;\n  public googleId = GoogleLoginProvider.PROVIDER_ID;\n\n  constructor(\n    private authService: AuthService\n  ) {\n  }\n\n  public login(providerId: string): void {\n    this.authService.signIn(providerId).then(test => console.log(JSON.stringify(test)));\n  }\n\n}\n","<div fxFill fxLayoutAlign=\"center center\">\n    <mat-card>\n        <mat-card-header>\n            <div mat-card-avatar>\n                <mat-icon>lock</mat-icon>\n            </div>\n            <mat-card-title i18n>login.title</mat-card-title>\n            <mat-card-subtitle i18n>login.subtitle</mat-card-subtitle>\n        </mat-card-header>\n        <mat-card-content>\n        </mat-card-content>\n        <mat-card-actions fxLayout=\"column\">\n            <button mat-button (click)=\"login(facebookId)\">\n                <div fxLayoutAlign=\"space-between center\">\n                    <mat-icon svgIcon=\"facebook\"></mat-icon>\n                    <mat-label i18n fxFlex>login.facebook</mat-label>\n                </div>\n            </button>\n            <button mat-button (click)=\"login(googleId)\" disabled>\n                <div fxLayoutAlign=\"space-between center\">\n                    <mat-icon svgIcon=\"google\"></mat-icon>\n                    <mat-label i18n fxFlex>login.google</mat-label>\n                </div>\n            </button>\n        </mat-card-actions>\n    </mat-card>\n</div>","import { GoogleLoginProvider, FacebookLoginProvider, AuthServiceConfig } from \"angularx-social-login\";\r\nimport { FactoryProvider, StaticProvider, LOCALE_ID } from '@angular/core';\r\nimport { Environment } from 'src/environments/environment';\r\nimport { TranslateModuleConfig, TranslateLoader, TranslateService } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { APP_BASE_HREF, PlatformLocation } from '@angular/common';\r\n\r\nexport class DynamicLocaleId extends String {\r\n    constructor(protected service: TranslateService) {\r\n        super();\r\n    }\r\n\r\n    toString() {\r\n        return this.service.currentLang;\r\n    }\r\n}\r\n\r\nexport const LocaleProvider: StaticProvider = {\r\n    provide: LOCALE_ID,\r\n    useClass: DynamicLocaleId,\r\n    deps: [TranslateService]\r\n};\r\n\r\nexport const authServiceConfigProvider: FactoryProvider = {\r\n    provide: AuthServiceConfig,\r\n    useFactory: (environment: Environment) => new AuthServiceConfig([\r\n        {\r\n            id: GoogleLoginProvider.PROVIDER_ID,\r\n            provider: new GoogleLoginProvider(environment.getGoogleAppId())\r\n        },\r\n        {\r\n            id: FacebookLoginProvider.PROVIDER_ID,\r\n            provider: new FacebookLoginProvider(environment.getFacebookAppId())\r\n        }\r\n    ]),\r\n    deps: [ Environment ]\r\n}\r\n\r\nexport class BaseHrefTranslateHttpLoader extends TranslateHttpLoader {\r\n\r\n    constructor(http: HttpClient, baseHref: string, environment: Environment) {\r\n        super(http);\r\n        \r\n        this.prefix = new URL(this.prefix , baseHref).toString();\r\n        this.suffix = this.suffix + '?version=' + environment.getVersion();\r\n    }\r\n\r\n}\r\n\r\nexport function CreateTranslateLoader(http: HttpClient, baseHref: string, environment: Environment) {\r\n    return new BaseHrefTranslateHttpLoader(http, baseHref, environment);\r\n}\r\n\r\nexport const TranslateProvider: FactoryProvider = {\r\n    provide: TranslateLoader,\r\n    useFactory: CreateTranslateLoader,\r\n    deps: [\r\n        HttpClient,\r\n        APP_BASE_HREF,\r\n        Environment\r\n    ]\r\n};\r\n\r\nexport const TranslateModuleLoaderConfig: TranslateModuleConfig = {\r\n    loader: TranslateProvider\r\n};\r\n\r\nexport function GetBaseHref(platformLocation: PlatformLocation): string {\r\n    return platformLocation.getBaseHrefFromDOM();\r\n}\r\n\r\nexport const BaseHrefProvider: FactoryProvider = {\r\n    provide: APP_BASE_HREF,\r\n    useFactory: GetBaseHref,\r\n    deps: [\r\n        PlatformLocation\r\n    ]\r\n};\r\n","import { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatCardModule } from '@angular/material/card';\n\nimport { SocialLoginModule } from 'angularx-social-login';\n\nimport { authServiceConfigProvider } from '../providers/providers';\nimport { IconsModule } from '../icons/icons.module';\n\n@NgModule({\n  exports: [\n    HttpClientModule,\n    FlexLayoutModule,\n    MatIconModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatFormFieldModule,\n    MatCardModule,\n    SocialLoginModule,\n    IconsModule\n  ],\n  providers: [\n    authServiceConfigProvider\n  ]\n})\nexport class SharedModule { }\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class StateService {\r\n\r\n    public logged: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { SwUpdate } from '@angular/service-worker';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class UpdateService {\r\n\r\n    constructor(\r\n        private swUpdate: SwUpdate\r\n    ) {\r\n        if (this.swUpdate.isEnabled) {\r\n            this.swUpdate.available.pipe(\r\n                filter(() => confirm($localize`update.confirm`))\r\n            ).subscribe(() => this.swUpdate.activateUpdate().then(() => window.location.reload()));\r\n        }\r\n    }\r\n\r\n}\r\n","import  *  as  package_json  from  '../../package.json';\r\n\r\nexport enum EnvironmentType {\r\n    dev,\r\n    prod\r\n}\r\n\r\nexport abstract class AbstractEnvironment {\r\n\r\n    getVersion(): string {\r\n        return package_json.version;\r\n    };\r\n    abstract getType(): EnvironmentType;\r\n    abstract getFacebookAppId(): string;\r\n    abstract getGoogleAppId(): string;\r\n\r\n}\r\n","import { AbstractEnvironment, EnvironmentType } from './abstract-environment';\n\nexport const environmentType: EnvironmentType  = EnvironmentType.dev;\n\nexport class Environment extends AbstractEnvironment {\n\n  getType(): EnvironmentType {\n    return environmentType;\n  } \n  getFacebookAppId(): string {\n    return '2556092497994302';\n  }\n  getGoogleAppId(): string {\n    return '716019201225-k0bqr14jufoiqooejnc2fu42hkhh248i.apps.googleusercontent.com';\n  }\n\n}\n\n\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environmentType } from './environments/environment';\nimport { EnvironmentType } from './environments/abstract-environment';\n\nif (environmentType === EnvironmentType.prod) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}