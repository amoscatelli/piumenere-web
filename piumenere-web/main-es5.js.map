{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/icons/icons.module.ts","webpack:///src/app/locale/locale.service.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/providers/providers.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/state/state-service.ts","webpack:///src/app/update/update-service.ts","webpack:///src/environments/abstract-environment.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","loginRoute","path","component","defaultRoute","loadChildren","m","DefaultModule","routes","AppRoutingModule","forRoot","imports","AppComponent","router","updateService","stateService","localService","title","logged","pipe","subscribe","navigate","sidenav","toggle","selector","templateUrl","styleUrls","AppModule","register","enabled","prod","declarations","bootstrap","IconsModule","iconRegistry","sanitizer","addSvgIconSet","bypassSecurityTrustResourceUrl","LocaleService","translate","localStorage","getItem","getBrowserLang","setItem","localeId","setDefaultLang","use","providedIn","LoginComponent","authService","facebookId","PROVIDER_ID","googleId","providerId","signIn","test","console","log","JSON","stringify","login","DynamicLocaleId","service","currentLang","String","LocaleProvider","provide","useClass","deps","authServiceConfigProvider","useFactory","environment","provider","getGoogleAppId","getFacebookAppId","BaseHrefTranslateHttpLoader","http","baseHref","prefix","URL","toString","suffix","getVersion","CreateTranslateLoader","TranslateProvider","TranslateModuleLoaderConfig","loader","GetBaseHref","platformLocation","getBaseHrefFromDOM","BaseHrefProvider","SharedModule","providers","StateService","UpdateService","swUpdate","isEnabled","available","confirm","$localize","activateUpdate","window","location","reload","EnvironmentType","AbstractEnvironment","environmentType","dev","Environment","bootstrapModule","catch","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule, Route } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\n\nexport const loginRoute: Route = {\n  path: 'login',\n  component: LoginComponent\n}\n\nexport const defaultRoute: Route = {\n  path: 'default',\n  loadChildren: () => import('./default/default.module').then(m => m.DefaultModule)\n}\n\nconst routes: Routes = [\n  loginRoute,\n  defaultRoute\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, ViewChild } from '@angular/core';\nimport { UpdateService } from './update/update-service';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { StateService } from './state/state-service';\nimport { filter } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { loginRoute, defaultRoute } from './app-routing.module';\nimport { LocaleService } from './locale/locale.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'piumenere-web';\n\n  @ViewChild(MatSidenav)\n  private sidenav: MatSidenav;\n\n  constructor(\n    router: Router,\n    public updateService: UpdateService,\n    stateService: StateService,\n    public localService: LocaleService\n  ) {\n    stateService.logged.pipe(\n      filter(logged => !logged)\n    ).subscribe(\n      () => router.navigate([loginRoute.path])\n    )\n    stateService.logged.pipe(\n      filter(logged => logged)\n    ).subscribe(\n      () => router.navigate([defaultRoute.path])\n    )\n  }\n\n  public toggle(): void {\n    this.sidenav.toggle();\n  }\n\n}\n","<mat-sidenav-container fullscreen>\n    <mat-sidenav>\n        <button mat-button (click)=\"this.toggle()\">\n            <mat-icon>close</mat-icon>\n        </button>\n    </mat-sidenav>\n    <mat-sidenav-content fxLayout=\"column\">\n        <mat-toolbar>\n            <div fxFlex>\n                <button mat-button (click)=\"this.toggle()\">\n                    <mat-icon>menu</mat-icon>\n                </button>\n            </div>\n            <mat-label fxFlexAlign=\"center\" i18n>app.label</mat-label>\n            <div fxFlex>\n            </div>\n        </mat-toolbar>\n        <div fxFlex>\n            <router-outlet></router-outlet>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","import { NgModule } from '@angular/core';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environmentType } from '../environments/environment';\nimport { SharedModule } from './shared/shared.module';\nimport { LoginComponent } from './login/login.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { EnvironmentType } from 'src/environments/abstract-environment';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { TranslateModuleLoaderConfig } from './providers/providers';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent\n  ],\n  imports: [\n    SharedModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    TranslateModule.forRoot(TranslateModuleLoaderConfig),\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environmentType === EnvironmentType.prod })\n  ],\n  bootstrap: [\n    AppComponent\n  ]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\r\nimport { MatIconRegistry } from '@angular/material/icon';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@NgModule()\r\nexport class IconsModule {\r\n\r\n    constructor(\r\n        private iconRegistry: MatIconRegistry,\r\n        private sanitizer: DomSanitizer) {\r\n        this.iconRegistry.addSvgIconSet(this.sanitizer.bypassSecurityTrustResourceUrl('./assets/mdi.svg'));\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { registerLocaleData } from '@angular/common';\r\nimport localeIt from '@angular/common/locales/it';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class LocaleService {\r\n\r\n    constructor(\r\n        public translate: TranslateService\r\n    ) {\r\n        if (!localStorage.getItem('locale')) {\r\n            if (!this.translate.getBrowserLang()) {\r\n              localStorage.setItem('locale', 'en');\r\n            } else {\r\n              localStorage.setItem('locale', this.translate.getBrowserLang());\r\n            }\r\n          }\r\n          registerLocaleData(localeIt, 'it');\r\n      \r\n          const localeId = localStorage.getItem('locale');\r\n          this.translate.setDefaultLang(localeId);\r\n          this.translate.use(localeId);\r\n    }\r\n\r\n}\r\n","import { Component } from '@angular/core';\nimport { AuthService, GoogleLoginProvider, FacebookLoginProvider } from 'angularx-social-login';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent {\n\n  public facebookId = FacebookLoginProvider.PROVIDER_ID;\n  public googleId = GoogleLoginProvider.PROVIDER_ID;\n\n  constructor(\n    private authService: AuthService\n  ) {\n  }\n\n  public login(providerId: string): void {\n    this.authService.signIn(providerId).then(test => console.log(JSON.stringify(test)));\n  }\n\n}\n","<div fxFill fxLayoutAlign=\"center center\">\n    <mat-card>\n        <mat-card-header>\n            <div mat-card-avatar>\n                <mat-icon>lock</mat-icon>\n            </div>\n            <mat-card-title i18n>login.title</mat-card-title>\n            <mat-card-subtitle i18n>login.subtitle</mat-card-subtitle>\n        </mat-card-header>\n        <mat-card-content>\n        </mat-card-content>\n        <mat-card-actions fxLayout=\"column\">\n            <button mat-button (click)=\"login(facebookId)\">\n                <div fxLayoutAlign=\"space-between center\">\n                    <mat-icon svgIcon=\"facebook\"></mat-icon>\n                    <mat-label i18n fxFlex>login.facebook</mat-label>\n                </div>\n            </button>\n            <button mat-button (click)=\"login(googleId)\" disabled>\n                <div fxLayoutAlign=\"space-between center\">\n                    <mat-icon svgIcon=\"google\"></mat-icon>\n                    <mat-label i18n fxFlex>login.google</mat-label>\n                </div>\n            </button>\n        </mat-card-actions>\n    </mat-card>\n</div>","import { GoogleLoginProvider, FacebookLoginProvider, AuthServiceConfig } from \"angularx-social-login\";\r\nimport { FactoryProvider, StaticProvider, LOCALE_ID } from '@angular/core';\r\nimport { Environment } from 'src/environments/environment';\r\nimport { TranslateModuleConfig, TranslateLoader, TranslateService } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { APP_BASE_HREF, PlatformLocation } from '@angular/common';\r\n\r\nexport class DynamicLocaleId extends String {\r\n    constructor(protected service: TranslateService) {\r\n        super();\r\n    }\r\n\r\n    toString() {\r\n        return this.service.currentLang;\r\n    }\r\n}\r\n\r\nexport const LocaleProvider: StaticProvider = {\r\n    provide: LOCALE_ID,\r\n    useClass: DynamicLocaleId,\r\n    deps: [TranslateService]\r\n};\r\n\r\nexport const authServiceConfigProvider: FactoryProvider = {\r\n    provide: AuthServiceConfig,\r\n    useFactory: (environment: Environment) => new AuthServiceConfig([\r\n        {\r\n            id: GoogleLoginProvider.PROVIDER_ID,\r\n            provider: new GoogleLoginProvider(environment.getGoogleAppId())\r\n        },\r\n        {\r\n            id: FacebookLoginProvider.PROVIDER_ID,\r\n            provider: new FacebookLoginProvider(environment.getFacebookAppId())\r\n        }\r\n    ]),\r\n    deps: [ Environment ]\r\n}\r\n\r\nexport class BaseHrefTranslateHttpLoader extends TranslateHttpLoader {\r\n\r\n    constructor(http: HttpClient, baseHref: string, environment: Environment) {\r\n        super(http);\r\n        \r\n        this.prefix = new URL(this.prefix , baseHref).toString();\r\n        this.suffix = this.suffix + '?version=' + environment.getVersion();\r\n    }\r\n\r\n}\r\n\r\nexport function CreateTranslateLoader(http: HttpClient, baseHref: string, environment: Environment) {\r\n    return new BaseHrefTranslateHttpLoader(http, baseHref, environment);\r\n}\r\n\r\nexport const TranslateProvider: FactoryProvider = {\r\n    provide: TranslateLoader,\r\n    useFactory: CreateTranslateLoader,\r\n    deps: [\r\n        HttpClient,\r\n        APP_BASE_HREF,\r\n        Environment\r\n    ]\r\n};\r\n\r\nexport const TranslateModuleLoaderConfig: TranslateModuleConfig = {\r\n    loader: TranslateProvider\r\n};\r\n\r\nexport function GetBaseHref(platformLocation: PlatformLocation): string {\r\n    return platformLocation.getBaseHrefFromDOM();\r\n}\r\n\r\nexport const BaseHrefProvider: FactoryProvider = {\r\n    provide: APP_BASE_HREF,\r\n    useFactory: GetBaseHref,\r\n    deps: [\r\n        PlatformLocation\r\n    ]\r\n};\r\n","import { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatCardModule } from '@angular/material/card';\n\nimport { SocialLoginModule } from 'angularx-social-login';\n\nimport { authServiceConfigProvider } from '../providers/providers';\nimport { IconsModule } from '../icons/icons.module';\n\n@NgModule({\n  exports: [\n    HttpClientModule,\n    FlexLayoutModule,\n    MatIconModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatFormFieldModule,\n    MatCardModule,\n    SocialLoginModule,\n    IconsModule\n  ],\n  providers: [\n    authServiceConfigProvider\n  ]\n})\nexport class SharedModule { }\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class StateService {\r\n\r\n    public logged: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { SwUpdate } from '@angular/service-worker';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class UpdateService {\r\n\r\n    constructor(\r\n        private swUpdate: SwUpdate\r\n    ) {\r\n        if (this.swUpdate.isEnabled) {\r\n            this.swUpdate.available.pipe(\r\n                filter(() => confirm($localize`update.confirm`))\r\n            ).subscribe(() => this.swUpdate.activateUpdate().then(() => window.location.reload()));\r\n        }\r\n    }\r\n\r\n}\r\n","import  *  as  package_json  from  '../../package.json';\r\n\r\nexport enum EnvironmentType {\r\n    dev,\r\n    prod\r\n}\r\n\r\nexport abstract class AbstractEnvironment {\r\n\r\n    getVersion(): string {\r\n        return package_json.version;\r\n    };\r\n    abstract getType(): EnvironmentType;\r\n    abstract getFacebookAppId(): string;\r\n    abstract getGoogleAppId(): string;\r\n\r\n}\r\n","import { AbstractEnvironment, EnvironmentType } from './abstract-environment';\n\nexport const environmentType: EnvironmentType  = EnvironmentType.dev;\n\nexport class Environment extends AbstractEnvironment {\n\n  getType(): EnvironmentType {\n    return environmentType;\n  } \n  getFacebookAppId(): string {\n    return '2556092497994302';\n  }\n  getGoogleAppId(): string {\n    return '716019201225-k0bqr14jufoiqooejnc2fu42hkhh248i.apps.googleusercontent.com';\n  }\n\n}\n\n\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environmentType } from './environments/environment';\nimport { EnvironmentType } from './environments/abstract-environment';\n\nif (environmentType === EnvironmentType.prod) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}